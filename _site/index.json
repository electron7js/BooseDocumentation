{
  "api/ASE_Assignment_Bijesh.MainForm.html": {
    "href": "api/ASE_Assignment_Bijesh.MainForm.html",
    "title": "Class MainForm | ASE Assignment Bijesh",
    "keywords": "Class MainForm Namespace ASE_Assignment_Bijesh Assembly ASE Assignment Bijesh.dll The windows form which provides a GUI to use the boose interpreter and its implementations public class MainForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form MainForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MainForm() The public constructor for the form. Initializes all of the factory, program and parser objects public MainForm() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/ASE_Assignment_Bijesh.Src.BooseSingleRunnerForTests.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.BooseSingleRunnerForTests.html",
    "title": "Class BooseSingleRunnerForTests | ASE Assignment Bijesh",
    "keywords": "Class BooseSingleRunnerForTests Namespace ASE_Assignment_Bijesh.Src Assembly ASE Assignment Bijesh.dll An encapsulated streamlined class for testing the BOOSE interpreter public class BooseSingleRunnerForTests Inheritance object BooseSingleRunnerForTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BooseSingleRunnerForTests() Public constructor public BooseSingleRunnerForTests() Methods GetCurrentPosition() public Point GetCurrentPosition() Returns Point RunProgram(string) public void RunProgram(string program) Parameters program string"
  },
  "api/ASE_Assignment_Bijesh.Src.BooseWrapper.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.BooseWrapper.html",
    "title": "Class BooseWrapper | ASE Assignment Bijesh",
    "keywords": "Class BooseWrapper Namespace ASE_Assignment_Bijesh.Src Assembly ASE Assignment Bijesh.dll An encapsulated streamlined class for running the BOOSE interpreter public class BooseWrapper : IBooseWrapper Inheritance object BooseWrapper Implements IBooseWrapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static BooseWrapper Instance { get; } Property Value BooseWrapper Methods ClearScreen() Clears the Screen public void ClearScreen() GetBitmap() Returns the bitmap of the current state of the canvas public Bitmap GetBitmap() Returns Bitmap GetCurrentPosition() Returns the current X,Y coordinate of the virtual cursor at public Point GetCurrentPosition() Returns Point GetInstance() Returns the singleton instance as a IBooseWrapper reference public static IBooseWrapper GetInstance() Returns IBooseWrapper Reset() Clears the Screen public void Reset() RunProgram(string) Compiles and runs the program given in the program string public void RunProgram(string program) Parameters program string"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandBrushColor.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandBrushColor.html",
    "title": "Class CommandBrushColor | ASE Assignment Bijesh",
    "keywords": "Class CommandBrushColor Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The brush color object returned for the brush command, changes the brush color on execution public class CommandBrushColor : CommandThreeParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters CommandBrushColor Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandBrushColor() Public empty constructor public CommandBrushColor() CommandBrushColor(Canvas, int, int, int) Parameterized constructor to directly create object without factory interaction public CommandBrushColor(Canvas canvas, int r, int g, int b) Parameters canvas Canvas The canvas object of the output. r int The red value. g int The green value. b int The blue value. Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandCall.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandCall.html",
    "title": "Class CommandCall | ASE Assignment Bijesh",
    "keywords": "Class CommandCall Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll Replaced Implementation of the call function to support the rewritten Evaluation Methods class public class CommandCall : Call, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Call CommandCall Implements ICommand Inherited Members Call.methodName CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandCall() The empty constructor, upcasts the base stored program object into an AppStoredProgram object. public CommandCall() Methods Compile() Creates method objects to store in the program stack. Reduces the restriction counter of the base class. public override void Compile() Execute() The Execute method called during stored program execution finds and executes the method as a program. public override void Execute() Restrictions() Just removes the restrictions from the compound command class public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandCircle.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandCircle.html",
    "title": "Class CommandCircle | ASE Assignment Bijesh",
    "keywords": "Class CommandCircle Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The circle object returned for the circle command. Draws a circle on execution. May be a filled circle if true is passed as second parameter. public class CommandCircle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandCircle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandCircle() public CommandCircle() Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandFilledCircle.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandFilledCircle.html",
    "title": "Class CommandFilledCircle | ASE Assignment Bijesh",
    "keywords": "Class CommandFilledCircle Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The filled circle object returned for the fcircle command. Draws a filled circle on execution. public class CommandFilledCircle : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandFilledCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandFilledCircle() Public empty constructor public CommandFilledCircle() CommandFilledCircle(Canvas, int) Parameterized constructor to directly create object without factory interaction public CommandFilledCircle(Canvas canvas, int radius) Parameters canvas Canvas The canvas object of the output. radius int The radius of the circle. Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandFilledRectangle.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandFilledRectangle.html",
    "title": "Class CommandFilledRectangle | ASE Assignment Bijesh",
    "keywords": "Class CommandFilledRectangle Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The filled circle object returned for the fcircle command. Draws a filled circle on execution. public class CommandFilledRectangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandFilledRectangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandFilledRectangle() Public empty constructor public CommandFilledRectangle() CommandFilledRectangle(Canvas, int, int) Parameterized constructor to directly create object without factory interaction public CommandFilledRectangle(Canvas canvas, int width, int height) Parameters canvas Canvas The canvas object of the output. width int The width of the rectangle. height int The height of the rectangle. Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandRect.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandRect.html",
    "title": "Class CommandRect | ASE Assignment Bijesh",
    "keywords": "Class CommandRect Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The circle object returned for the circle command. Draws a circle on execution. May be a filled circle if true is passed as second parameter. public class CommandRect : CommandThreeParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters CommandRect Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandRect() public CommandRect() Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandTriangle.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandTriangle.html",
    "title": "Class CommandTriangle | ASE Assignment Bijesh",
    "keywords": "Class CommandTriangle Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The triangle object returned for the tri command. Draws an Isosceles triangle on execution. public class CommandTriangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandTriangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandTriangle() Public empty constructor public CommandTriangle() CommandTriangle(Canvas, int, int) Parameterized constructor to directly create object without factory interaction public CommandTriangle(Canvas canvas, int width, int height) Parameters canvas Canvas The canvas object of the output. width int The width of the base of the triangle. height int The height of the triangle. Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The string array of parameters. Execute() The Execute method called during stored program execution public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.CommandWrite.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.CommandWrite.html",
    "title": "Class CommandWrite | ASE Assignment Bijesh",
    "keywords": "Class CommandWrite Namespace ASE_Assignment_Bijesh.Src.Command Assembly ASE Assignment Bijesh.dll The write object returned for the write command. public class CommandWrite : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandWrite Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandWrite() Public empty constructor public CommandWrite() CommandWrite(Canvas) Parameterized constructor to directly create object without factory interaction public CommandWrite(Canvas canvas) Parameters canvas Canvas Methods CheckParameters(string[]) Validation of the parameters public override void CheckParameters(string[] parameterList) Parameters parameterList string[] Execute() The Execute method called during stored program execution Writes the given expression after it is evaluated by the stored program public override void Execute()"
  },
  "api/ASE_Assignment_Bijesh.Src.Command.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Command.html",
    "title": "Namespace ASE_Assignment_Bijesh.Src.Command | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh.Src.Command Classes CommandBrushColor The brush color object returned for the brush command, changes the brush color on execution CommandCall Replaced Implementation of the call function to support the rewritten Evaluation Methods class CommandCircle The circle object returned for the circle command. Draws a circle on execution. May be a filled circle if true is passed as second parameter. CommandFilledCircle The filled circle object returned for the fcircle command. Draws a filled circle on execution. CommandFilledRectangle The filled circle object returned for the fcircle command. Draws a filled circle on execution. CommandRect The circle object returned for the circle command. Draws a circle on execution. May be a filled circle if true is passed as second parameter. CommandTriangle The triangle object returned for the tri command. Draws an Isosceles triangle on execution. CommandWrite The write object returned for the write command."
  },
  "api/ASE_Assignment_Bijesh.Src.Components.AppCanvas.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.AppCanvas.html",
    "title": "Class AppCanvas | ASE Assignment Bijesh",
    "keywords": "Class AppCanvas Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll The canvas class which is to be manipulated by the BOOSE interpreter public class AppCanvas : IExtendedCanvas, ICanvas Inheritance object AppCanvas Implements IExtendedCanvas ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCanvas() Public constructor that calls the set function to setup the canvas public AppCanvas() Properties BrushColour Return and set the brush colour public object BrushColour { get; set; } Property Value object PenColour Required Pen object from the interface, unused. public object PenColour { get; set; } Property Value object Xpos X coordinate of the current position public int Xpos { get; set; } Property Value int Ypos Y coordinate of the current position public int Ypos { get; set; } Property Value int Methods Circle(int, bool) Draws a circle at the current position public void Circle(int radius, bool filled) Parameters radius int The Radius of the circle. filled bool The fill status of the circle if true, filled. Clear() Clears the screen by filling it with gray public void Clear() DrawTo(int, int) Draws a line from the current position to the given end point public void DrawTo(int x, int y) Parameters x int The x coordinate of the end point. y int The y coordinate of the end point. MoveTo(int, int) Sets the current position to the given point public void MoveTo(int x, int y) Parameters x int The x coordinate of the given point. y int The y coordinate of the given point. Rect(int, int, bool) Draws a rectangle at the current position of the given parameters. public void Rect(int width, int height, bool filled) Parameters width int The width of the rectangle. height int The height of the rectangle. filled bool Boolean value to set the fill of the rectangle. Reset() Resets the current position of the cursor. public void Reset() Set(int, int) Initializer for the app canvas class. Sets the canvas size, brush and color. public void Set(int xsize, int ysize) Parameters xsize int The width of the canvas. ysize int The height of the canvas. SetBrushColour(int, int, int) Changes the color of the brush given an rgb value. public void SetBrushColour(int red, int green, int blue) Parameters red int The red value. green int The green value. blue int The blue value. SetColour(int, int, int) Changes the color of the pen given an rgb value. public void SetColour(int red, int green, int blue) Parameters red int The red value. green int The green value. blue int The blue value. Tri(int, int) Draws a triangle at the current position with the given width and height public void Tri(int width, int height) Parameters width int height int WriteText(string) Writes a string on the canvas at the current position public void WriteText(string text) Parameters text string The string value to be printed. getBitmap() Returns the bitmap of the canvas public object getBitmap() Returns object Bitmap"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.AppCommand.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.AppCommand.html",
    "title": "Class AppCommand | ASE Assignment Bijesh",
    "keywords": "Class AppCommand Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll Extension of the app command class, Unused, only created for study public abstract class AppCommand : Command, ICommand Inheritance object Command AppCommand Implements ICommand Inherited Members Command.program Command.parameterList Command.parameters Command.paramsint Command.CheckParameters(string[]) Command.Set(StoredProgram, string) Command.Compile() Command.Execute() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCommand(AppStoredProgram) Primary constructor protected AppCommand(AppStoredProgram storedProgram) Parameters storedProgram AppStoredProgram Fields _storedProgram The stored program reference used to reference to the command stack protected AppStoredProgram _storedProgram Field Value AppStoredProgram Properties StoredProgram Public setter and getter to access the Programs store public AppStoredProgram StoredProgram { get; set; } Property Value AppStoredProgram Methods Set(AppStoredProgram, string) Function to add the current command to the stored program public void Set(AppStoredProgram Program, string Params) Parameters Program AppStoredProgram Params string"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.AppCommandFactory.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.AppCommandFactory.html",
    "title": "Class AppCommandFactory | ASE Assignment Bijesh",
    "keywords": "Class AppCommandFactory Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll Uses the factory design methodology. The command factory which takes in the parsed command from the parser and then returns new objects specified by the commands public class AppCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Method to return the new required objects public override ICommand MakeCommand(string commandType) Parameters commandType string Returns ICommand"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.AppParser.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.AppParser.html",
    "title": "Class AppParser | ASE Assignment Bijesh",
    "keywords": "Class AppParser Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll Replaced parser for this implementation of the BOOSE interpreter. public class AppParser : IParser Inheritance object AppParser Implements IParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppParser(CommandFactory, AppStoredProgram) public AppParser(CommandFactory Factory, AppStoredProgram Program) Parameters Factory CommandFactory Program AppStoredProgram Methods ParseCommand(string) Parses the passed in single line BOOSE code into a line of BOOSE program and adds it to the list of stored programs public ICommand? ParseCommand(string line) Parameters line string One line of preprocessed BOOSE program Returns ICommand Exceptions ParserException ParseProgram(string) Takes in a multi-line BOOSE program string and converts it single line programs, converting any evaluations into their respective base commands and passes it to the Parse command method public void ParseProgram(string program) Parameters program string"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.AppStoredProgram.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.AppStoredProgram.html",
    "title": "Class AppStoredProgram | ASE Assignment Bijesh",
    "keywords": "Class AppStoredProgram Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll Replaced Implementation of the stored program class public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.SyntaxOk StoredProgram.AddMethod(Method) StoredProgram.AddVariable(Evaluation) StoredProgram.GetVariable(string) StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.FindVariable(string) StoredProgram.VariableExists(string) StoredProgram.GetVarValue(string) StoredProgram.UpdateVariable(string, int) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.Commandsleft() StoredProgram.PC ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default constructor, just initializes the base class Constructors AppStoredProgram(ICanvas) Replaced Implementation of the stored program class public AppStoredProgram(ICanvas canvas) Parameters canvas ICanvas Remarks Default constructor, just initializes the base class Methods AddMethod(EvaluationMethod) Add a method into the methods list TODO: overwrite or replace methods of the same name for the latter declaration public void AddMethod(EvaluationMethod method) Parameters method EvaluationMethod GetMethod(string) Finds a method by its name public EvaluationMethod GetMethod(string MethodName) Parameters MethodName string Returns EvaluationMethod The method Exceptions StoredProgramException Pop() Remove the top program from the program stack public override ConditionalCommand Pop() Returns ConditionalCommand BOOSE Program Object Exceptions StoredProgramException Push(ConditionalCommand) Insert a BOOSE program into the program stack public override void Push(ConditionalCommand Com) Parameters Com ConditionalCommand ResetProgram() Resets the program to the initial state public override void ResetProgram() Run() Run the program using the compiled programs list public override void Run() Exceptions StoredProgramException"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.IExtendedCanvas.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.IExtendedCanvas.html",
    "title": "Interface IExtendedCanvas | ASE Assignment Bijesh",
    "keywords": "Interface IExtendedCanvas Namespace ASE_Assignment_Bijesh.Src.Components Assembly ASE Assignment Bijesh.dll Extended canvas interface to support additional features. public interface IExtendedCanvas : ICanvas Inherited Members ICanvas.Set(int, int) ICanvas.SetColour(int, int, int) ICanvas.MoveTo(int, int) ICanvas.DrawTo(int, int) ICanvas.Clear() ICanvas.Reset() ICanvas.Circle(int, bool) ICanvas.Rect(int, int, bool) ICanvas.Tri(int, int) ICanvas.WriteText(string) ICanvas.getBitmap() ICanvas.Xpos ICanvas.Ypos ICanvas.PenColour Properties BrushColour Return and set the brush colour object BrushColour { get; set; } Property Value object Methods SetBrushColour(int, int, int) Change the color of the brush used for text and filled shapes void SetBrushColour(int red, int green, int blue) Parameters red int green int blue int"
  },
  "api/ASE_Assignment_Bijesh.Src.Components.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Components.html",
    "title": "Namespace ASE_Assignment_Bijesh.Src.Components | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh.Src.Components Classes AppCanvas The canvas class which is to be manipulated by the BOOSE interpreter AppCommand Extension of the app command class, Unused, only created for study AppCommandFactory Uses the factory design methodology. The command factory which takes in the parsed command from the parser and then returns new objects specified by the commands AppParser Replaced parser for this implementation of the BOOSE interpreter. AppStoredProgram Replaced Implementation of the stored program class Interfaces IExtendedCanvas Extended canvas interface to support additional features."
  },
  "api/ASE_Assignment_Bijesh.Src.Conditionals.AppCompoundCommand.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Conditionals.AppCompoundCommand.html",
    "title": "Class AppCompoundCommand | ASE Assignment Bijesh",
    "keywords": "Class AppCompoundCommand Namespace ASE_Assignment_Bijesh.Src.Conditionals Assembly ASE Assignment Bijesh.dll The replaced Compound command implementation from the BOOSE library, Currently unused, was just used for study public class AppCompoundCommand : AppConditionalCommand, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand AppConditionalCommand AppCompoundCommand Implements ICommand Inherited Members ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Compile() Compiles the conditional command and its it on the program stack public override void Compile() Execute() Execute method which runs during stored program execution public override void Execute() Restrictions() Remove the restrictions public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Conditionals.AppConditionalCommand.ConditionalTypes.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Conditionals.AppConditionalCommand.ConditionalTypes.html",
    "title": "Enum AppConditionalCommand.ConditionalTypes | ASE Assignment Bijesh",
    "keywords": "Enum AppConditionalCommand.ConditionalTypes Namespace ASE_Assignment_Bijesh.Src.Conditionals Assembly ASE Assignment Bijesh.dll Specifies the conditional types public enum AppConditionalCommand.ConditionalTypes Fields commFor = 2 commIF = 0 commWhile = 1"
  },
  "api/ASE_Assignment_Bijesh.Src.Conditionals.AppConditionalCommand.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Conditionals.AppConditionalCommand.html",
    "title": "Class AppConditionalCommand | ASE Assignment Bijesh",
    "keywords": "Class AppConditionalCommand Namespace ASE_Assignment_Bijesh.Src.Conditionals Assembly ASE Assignment Bijesh.dll The replaced conditional command implementation from the BOOSE library, Currently unused, was just used for study public class AppConditionalCommand : ConditionalCommand, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand AppConditionalCommand Implements ICommand Derived AppCompoundCommand Inherited Members ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Compile() Compiles the program and pushes it into the stack public override void Compile() Execute() The execute function which runs during program execution public override void Execute() Restrictions() Removes the restrictions of the base class public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Conditionals.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Conditionals.html",
    "title": "Namespace ASE_Assignment_Bijesh.Src.Conditionals | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh.Src.Conditionals Classes AppCompoundCommand The replaced Compound command implementation from the BOOSE library, Currently unused, was just used for study AppConditionalCommand The replaced conditional command implementation from the BOOSE library, Currently unused, was just used for study Enums AppConditionalCommand.ConditionalTypes Specifies the conditional types"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationArray.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationArray.html",
    "title": "Class EvaluationArray | ASE Assignment Bijesh",
    "keywords": "Class EvaluationArray Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll The replaced implementation of the array class. Accepts an array of type Int and Real Only reduces/removes the restrictions for now. public class EvaluationArray : Array, ICommand Inheritance object Command Evaluation Array EvaluationArray Implements ICommand Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.Compile() Array.CheckParameters(string[]) Array.Execute() Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationArray() Public Constructor, just reduces the restriction counter. public EvaluationArray()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationBool.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationBool.html",
    "title": "Class EvaluationBool | ASE Assignment Bijesh",
    "keywords": "Class EvaluationBool Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the Boolean class Just removes the number of instances limit restriction public class EvaluationBool : Boolean, ICommand Inheritance object Command Evaluation Boolean EvaluationBool Implements ICommand Inherited Members Boolean.Compile() Boolean.Execute() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Removes the restrictions on the base boolean class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationElse.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationElse.html",
    "title": "Class EvaluationElse | ASE Assignment Bijesh",
    "keywords": "Class EvaluationElse Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the else command, reduces the restrictions. Must be used alongside an if command public class EvaluationElse : Else, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Else EvaluationElse Implements ICommand Inherited Members Else.CheckParameters(string[]) Else.Compile() Else.Execute() Else.CorrespondingEnd CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationElse() Public Constructor, just reduces the restriction counter. public EvaluationElse() Methods Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationEnd.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationEnd.html",
    "title": "Class EvaluationEnd | ASE Assignment Bijesh",
    "keywords": "Class EvaluationEnd Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the end command, reduces the restrictions. Must be used at the end of a conditional or a method command block public class EvaluationEnd : End, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand End EvaluationEnd Implements ICommand Inherited Members End.Compile() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationEnd() Public Constructor, just reduces the restriction counter. public EvaluationEnd() Methods Execute() Method called when the End method is executed in the BOOSE Program public override void Execute() Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationFor.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationFor.html",
    "title": "Class EvaluationFor | ASE Assignment Bijesh",
    "keywords": "Class EvaluationFor Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the for command, reduces the restrictions. Allows the program to create a for loop public class EvaluationFor : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For EvaluationFor Implements ICommand Inherited Members For.Compile() For.Execute() For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationIf.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationIf.html",
    "title": "Class EvaluationIf | ASE Assignment Bijesh",
    "keywords": "Class EvaluationIf Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the if command, reduces the restrictions. Allows conditional branching public class EvaluationIf : If, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand If EvaluationIf Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationIf() Public Constructor, just reduces the restriction counter. public EvaluationIf() Methods Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationInt.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationInt.html",
    "title": "Class EvaluationInt | ASE Assignment Bijesh",
    "keywords": "Class EvaluationInt Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the Int command, reduces the restrictions. Used to store and retrieve integer variables and their values. public class EvaluationInt : Int, ICommand Inheritance object Command Evaluation Int EvaluationInt Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Compile() Compiles the Int into the program stack public override void Compile() Execute() The Execute method called during program execution, evaluates and attempts to save an int variable public override void Execute() Exceptions StoredProgramException Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationIntRewrite.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationIntRewrite.html",
    "title": "Class EvaluationIntRewrite | ASE Assignment Bijesh",
    "keywords": "Class EvaluationIntRewrite Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Rewrite of the int class without inheriting Int, not used due to issues with the stored program public class EvaluationIntRewrite : Evaluation, ICommand Inheritance object Command Evaluation EvaluationIntRewrite Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationIntRewrite() Public constructor public EvaluationIntRewrite() Methods Compile() Adds the program to the program stack to compile it public override void Compile() Execute() The method called during execution of the program public override void Execute() Exceptions StoredProgramException"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationMethod.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationMethod.html",
    "title": "Class EvaluationMethod | ASE Assignment Bijesh",
    "keywords": "Class EvaluationMethod Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll public class EvaluationMethod : CompoundCommand, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand EvaluationMethod Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationMethod() public EvaluationMethod() Properties LocalVariables The array to store the local variables public string[] LocalVariables { get; } Property Value string[] MethodName Public access to the private method name public string MethodName { get; } Property Value string Type The return type of the program public string Type { get; } Property Value string Methods Compile() Compiles the method and sets the beginning and returning line numbers and sets up the local variables public override void Compile() Exceptions CommandException Execute() The method that runs during program execution public override void Execute() Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationReal.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationReal.html",
    "title": "Class EvaluationReal | ASE Assignment Bijesh",
    "keywords": "Class EvaluationReal Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the Real command, reduces the restrictions. Used to store and retrieve real number variables and their values. public class EvaluationReal : Real, ICommand Inheritance object Command Evaluation Real EvaluationReal Implements ICommand Inherited Members Real.Compile() Real.Execute() Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationWhile.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.EvaluationWhile.html",
    "title": "Class EvaluationWhile | ASE Assignment Bijesh",
    "keywords": "Class EvaluationWhile Namespace ASE_Assignment_Bijesh.Src.Evaluations Assembly ASE Assignment Bijesh.dll Replaced implementation of the While command, reduces the restrictions. Used to create while loops in the interpreter. Needs to be acommpanied by an end command public class EvaluationWhile : While, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand While EvaluationWhile Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluationWhile() Public Constructor, just reduces the restriction counter. public EvaluationWhile() Methods Restrictions() Removes the restrictions on the base class by overriding it public override void Restrictions()"
  },
  "api/ASE_Assignment_Bijesh.Src.Evaluations.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.Evaluations.html",
    "title": "Namespace ASE_Assignment_Bijesh.Src.Evaluations | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh.Src.Evaluations Classes EvaluationArray The replaced implementation of the array class. Accepts an array of type Int and Real Only reduces/removes the restrictions for now. EvaluationBool Replaced implementation of the Boolean class Just removes the number of instances limit restriction EvaluationElse Replaced implementation of the else command, reduces the restrictions. Must be used alongside an if command EvaluationEnd Replaced implementation of the end command, reduces the restrictions. Must be used at the end of a conditional or a method command block EvaluationFor Replaced implementation of the for command, reduces the restrictions. Allows the program to create a for loop EvaluationIf Replaced implementation of the if command, reduces the restrictions. Allows conditional branching EvaluationInt Replaced implementation of the Int command, reduces the restrictions. Used to store and retrieve integer variables and their values. EvaluationIntRewrite Rewrite of the int class without inheriting Int, not used due to issues with the stored program EvaluationMethod EvaluationReal Replaced implementation of the Real command, reduces the restrictions. Used to store and retrieve real number variables and their values. EvaluationWhile Replaced implementation of the While command, reduces the restrictions. Used to create while loops in the interpreter. Needs to be acommpanied by an end command"
  },
  "api/ASE_Assignment_Bijesh.Src.IBooseWrapper.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.IBooseWrapper.html",
    "title": "Interface IBooseWrapper | ASE Assignment Bijesh",
    "keywords": "Interface IBooseWrapper Namespace ASE_Assignment_Bijesh.Src Assembly ASE Assignment Bijesh.dll An interface to create a streamlined boose wrapper public interface IBooseWrapper Fields Instance Single static singleton instance public static BooseWrapper Instance Field Value BooseWrapper Methods ClearScreen() Clears the Screen void ClearScreen() GetBitmap() Returns the bitmap of the current state of the canvas Bitmap GetBitmap() Returns Bitmap GetCurrentPosition() Returns the current X,Y coordinate of the virtual cursor at Point GetCurrentPosition() Returns Point GetInstance() Returns the static instance public static abstract IBooseWrapper GetInstance() Returns IBooseWrapper Reset() Resets the interpreter to the starting condition void Reset() RunProgram(string) Compiles and runs the program given in the program string void RunProgram(string program) Parameters program string"
  },
  "api/ASE_Assignment_Bijesh.Src.html": {
    "href": "api/ASE_Assignment_Bijesh.Src.html",
    "title": "Namespace ASE_Assignment_Bijesh.Src | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh.Src Classes BooseSingleRunnerForTests An encapsulated streamlined class for testing the BOOSE interpreter BooseWrapper An encapsulated streamlined class for running the BOOSE interpreter Interfaces IBooseWrapper An interface to create a streamlined boose wrapper"
  },
  "api/ASE_Assignment_Bijesh.html": {
    "href": "api/ASE_Assignment_Bijesh.html",
    "title": "Namespace ASE_Assignment_Bijesh | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh Classes MainForm The windows form which provides a GUI to use the boose interpreter and its implementations"
  },
  "api/ASE_Assignment_Bijesh_Tests.BooseWrapperTests.AppCommandFactoryTests.html": {
    "href": "api/ASE_Assignment_Bijesh_Tests.BooseWrapperTests.AppCommandFactoryTests.html",
    "title": "Class BooseWrapperTests.AppCommandFactoryTests | ASE Assignment Bijesh",
    "keywords": "Class BooseWrapperTests.AppCommandFactoryTests Namespace ASE_Assignment_Bijesh_Tests Assembly ASE Assignment Tests.dll [TestClass] public class BooseWrapperTests.AppCommandFactoryTests Inheritance object BooseWrapperTests.AppCommandFactoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestArrayEvaluation() [TestMethod] public void TestArrayEvaluation() TestBrush() [TestMethod] public void TestBrush() TestCircle() [TestMethod] public void TestCircle() TestElseEvaluation() [TestMethod] public void TestElseEvaluation() TestFilledCircle() [TestMethod] public void TestFilledCircle() TestFilledRectangle() [TestMethod] public void TestFilledRectangle() TestForEvaluation() [TestMethod] public void TestForEvaluation() TestIfEvaluation() [TestMethod] public void TestIfEvaluation() TestIntEvaluation() [TestMethod] public void TestIntEvaluation() TestMethodEvaluation() [TestMethod] public void TestMethodEvaluation() TestRealEvaluation() [TestMethod] public void TestRealEvaluation() TestRectangle() [TestMethod] public void TestRectangle() TestTriangle() [TestMethod] public void TestTriangle() TestWrite() [TestMethod] public void TestWrite()"
  },
  "api/ASE_Assignment_Bijesh_Tests.BooseWrapperTests.html": {
    "href": "api/ASE_Assignment_Bijesh_Tests.BooseWrapperTests.html",
    "title": "Class BooseWrapperTests | ASE Assignment Bijesh",
    "keywords": "Class BooseWrapperTests Namespace ASE_Assignment_Bijesh_Tests Assembly ASE Assignment Tests.dll The Unit tests for the Boose Wrapper class. [TestClass] public class BooseWrapperTests Inheritance object BooseWrapperTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestArrayEvaluation() Tests the array evaluation command creation [TestMethod] public void TestArrayEvaluation() TestBrush() Tests the brush command creation [TestMethod] public void TestBrush() TestCircle() Tests the circle command creation [TestMethod] public void TestCircle() TestDrawToMainProgram() Tests the drawto command passed through the parser [TestMethod] public void TestDrawToMainProgram() TestElseEvaluation() Tests the else evaluation command creation [TestMethod] public void TestElseEvaluation() TestFilledCircle() Tests the filled circle command creation [TestMethod] public void TestFilledCircle() TestFilledRectangle() Tests the filled rectangle command creation [TestMethod] public void TestFilledRectangle() TestForEvaluation() Tests the for evaluation command creation [TestMethod] public void TestForEvaluation() TestIfEvaluation() Tests the if evaluation command creation [TestMethod] public void TestIfEvaluation() TestIntEvaluation() Tests the int evaluation command creation [TestMethod] public void TestIntEvaluation() TestMethodEvaluation() Tests the method evaluation command creation [TestMethod] public void TestMethodEvaluation() TestMoveToMainProgram() Tests the moveto command passed through the parser [TestMethod] public void TestMoveToMainProgram() TestMultiLineMainProgram() Tests system by passing in a multiline program [TestMethod] public void TestMultiLineMainProgram() TestRealEvaluation() Tests the real evaluation command creation [TestMethod] public void TestRealEvaluation() TestRectangle() Tests the rectangle command creation [TestMethod] public void TestRectangle() TestTriangle() Tests the triangle command creation [TestMethod] public void TestTriangle() TestWrite() Tests the write command creation [TestMethod] public void TestWrite()"
  },
  "api/ASE_Assignment_Bijesh_Tests.CanvasTests.html": {
    "href": "api/ASE_Assignment_Bijesh_Tests.CanvasTests.html",
    "title": "Class CanvasTests | ASE Assignment Bijesh",
    "keywords": "Class CanvasTests Namespace ASE_Assignment_Bijesh_Tests Assembly ASE Assignment Tests.dll The Unit tests for the AppCanvas Class. Tests the final positions of the cursor after the methods are called. [TestClass] public class CanvasTests Inheritance object CanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestBitmap() Tests the get bitmap function [TestMethod] public void TestBitmap() TestChangeBrushColour() Tests the changing the brush colour externally [TestMethod] public void TestChangeBrushColour() TestChangePenColour() Tests the changing the pen colour externally [TestMethod] public void TestChangePenColour() TestCircle() Tests the circle method [TestMethod] public void TestCircle() TestCircleFilled() Tests the circle method with fill true [TestMethod] public void TestCircleFilled() TestClear() Tests the canvas clear method [TestMethod] public void TestClear() TestDrawToCanvas() [TestMethod] public void TestDrawToCanvas() TestMoveToCanvas() [TestMethod] public void TestMoveToCanvas() TestMultiLineMainProgram() Tests system by passing in a multiline program [TestMethod] public void TestMultiLineMainProgram() TestRect() Tests the Rectangle method [TestMethod] public void TestRect() TestRectFilled() Tests the Rectangle method with fill true [TestMethod] public void TestRectFilled() TestResetCanvas() Tests the canvas reset method [TestMethod] public void TestResetCanvas() TestSetCanvas() Tests the set canvas method [TestMethod] public void TestSetCanvas() TestTriangle() Tests the Triangle [TestMethod] public void TestTriangle() TestWriteText() Tests the write text method [TestMethod] public void TestWriteText()"
  },
  "api/ASE_Assignment_Bijesh_Tests.MainAppTests.html": {
    "href": "api/ASE_Assignment_Bijesh_Tests.MainAppTests.html",
    "title": "Class MainAppTests | ASE Assignment Bijesh",
    "keywords": "Class MainAppTests Namespace ASE_Assignment_Bijesh_Tests Assembly ASE Assignment Tests.dll The Unit tests for the Mainform Class but tests the overall BOOSE System implementation. [TestClass] public class MainAppTests Inheritance object MainAppTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestDrawToMainProgram() Tests the drawto command passed through the parser [TestMethod] public void TestDrawToMainProgram() TestMoveToMainProgram() Tests the moveto command passed through the parser [TestMethod] public void TestMoveToMainProgram() TestMultiLineMainProgram() Tests system by passing in a multiline program [TestMethod] public void TestMultiLineMainProgram()"
  },
  "api/ASE_Assignment_Bijesh_Tests.html": {
    "href": "api/ASE_Assignment_Bijesh_Tests.html",
    "title": "Namespace ASE_Assignment_Bijesh_Tests | ASE Assignment Bijesh",
    "keywords": "Namespace ASE_Assignment_Bijesh_Tests Classes BooseWrapperTests The Unit tests for the Boose Wrapper class. CanvasTests The Unit tests for the AppCanvas Class. Tests the final positions of the cursor after the methods are called. MainAppTests The Unit tests for the Mainform Class but tests the overall BOOSE System implementation."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | ASE Assignment Bijesh",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | ASE Assignment Bijesh",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "BOOSE Interpreter Implementation | ASE Assignment Bijesh",
    "keywords": "BOOSE Interpreter Implementation This project implements the BOOSE Interpreter written by Duncan Mullier. As required by the ASE assignment for Leeds Beckett University. Go through the API section to view the code documentation. Note Documentation has been written for the private methods but is not generated by the docfx system."
  }
}